#Cho bằng 0 để tự động chọn port không cần phải fix cứng
server.port= ${PORT:0}

spring.application.name=users-ws

#Đặt kết nối đến máy chủ Eureka
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

#Cho phép khởi động lại khi thay đổi code
spring.devtools.restart.enabled=true

#Tạo sự khác biệt trong mô hình microservic
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance-id:${random.value}}

#Tích hợp H2 database vào sau khi thêm DI
#Cho phép mở dữ liệu H2 thông qua console
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/users-microservice
#spring.datasource.username=postgres
#spring.datasource.password=quynh.huynh
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

#spring.datasource.username:root
#spring.datasource.password:lionhuynh
#spring.datasource.url=jdbc:mysql://localhost:3306/usersapidb?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Ho_Chi_Minh&useUnicode=yes&characterEncoding=utf8
#spring.jpa.database=MYSQL
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect 


#Đặt địa chỉ IP của gateway
gateway.ip=172.16.67.20
token.expiration_time=864000000
token.secret=widcjiwdcxjFGJN8737JJHdsxjkwx8HUHJVGH8983eyuxhnsjHHsnHHHH
login.url.path=/users/login

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#Spring boot actuator
management.endpoints.web.exposure.include=mappings,env

#Logging in Feign Clien
logging.level.com.huynhquynh.photoapp.api.users.data.AlbumsServiceClient=DEBUG

#Error Handling with Feign Hystrix FallbackFactory
feign.hystrix.enabled=true

#Distributed Tracing with Sleuth and Zipkin
#Thêm maven, cấu hình ở đây. Cài máy chủ Zipkin để xem qua UI thông qua http://localhost:9411/zipkin
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=WEB
spring.sleuth.sampler.probability=1

#Aggregating Log Files with ELK Stack
#B1: Thêm dòng config logging.file.name=users-ws.lo
#B2: Download Logstash và tạo file simple-config.conf trong thư mục logstash vừa tải
#B3:  Chạy bằng lệnh bin/logstash -f simple-config.conf
#B4: Tải elasticsearch và chạy bằng lệnh bin/elasticsearch.bat
#B5: Xem trên browser => http://localhost:9200
#Xem qua các url: http://localhost:9200/_cat
#Xem qua các url: http://localhost:9200/_cat/indices
#Xem qua các url: http://localhost:9200/users-ws-2020.08.16/_search?q=*
#Xem qua các url: http://localhost:9200/users-ws-2020.08.16/_search?q=*&format&pretty
#Xem qua các url: http://localhost:9200/users-ws-2020.08.16/_search?q=message:Eureka
#B6: Download Kibana và vào config/kibana.yml để config lại port hoặc cấu hình kết nối với elasticsearch. Nếu để mặc định tất cả thì thôi
#B7: Run bin/kibana (or bin/kibana.bat on Windows
#B8: Point your browser at http://localhost:5601
logging.file.name=users-ws.log




